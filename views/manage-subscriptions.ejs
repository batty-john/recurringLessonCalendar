<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Subscriptions</title>
    <link href="https://fonts.googleapis.com/css2?family=Lora:wght@400;700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <!-- Navigation here -->
    </header>
    <main>
        <h1>Manage Your Subscriptions</h1>
        <div id="subscription-list">
            <!-- Subscription items will be added here dynamically -->
        </div>
    </main>
    <footer>
        <!-- Footer content -->
    </footer>

    <script>
        // Fetch subscriptions from the server and render them
        function fetchSubscriptions() {
    fetch('/api/get-subscriptions')
        .then(response => response.json())
        .then(data => renderSubscriptions(data.subscriptions))
        .catch(error => console.error('Error fetching subscriptions:', error));
}


function renderSubscriptions(subscriptions) {
    const listElement = document.getElementById('subscription-list');
    listElement.innerHTML = ''; // Clear existing subscriptions

    subscriptions.forEach(sub => {
        const subElement = document.createElement('div');
        subElement.className = 'subscription-item';

        let subscriptionHtml = `<h3>${sub.plan}</h3><p>Amount: $${sub.amount}</p>`;

        if (sub.cancelAt) {
            // If there is a cancellation date, display it
            subscriptionHtml += `<p>Cancellation Date: ${sub.cancelAt}</p>`;
        } else {
            // If no cancellation date, display the next billing date and the cancel button
            subscriptionHtml += `
                <p>Next Billing Date: ${sub.nextBillingDate}</p>
                <button onclick="cancelSubscription('${sub.id}')">Cancel Subscription</button>`;
        }

        subElement.innerHTML = subscriptionHtml;
        listElement.appendChild(subElement);
    });
}


        function cancelSubscription(subscriptionId) {
    fetch('/cancel-subscription', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ subscriptionId: subscriptionId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Subscription cancelled successfully.');
            fetchSubscriptions(); // Re-fetch subscriptions to update the list
        } else {
            console.error('Failed to cancel subscription:', data.message);
        }
    })
    .catch(error => console.error('Error cancelling subscription:', error));
}


        // Initial fetch of subscriptions
        fetchSubscriptions();
    </script>
</body>
</html>
